
export const builtin_function1 = [
    {id : 0 , name : "String", parameters : "value" , comments : "//'value' can be any type."},
    {id : 1, name : "Number", parameters : "value" , comments : "//'value' can be any type."},
    {id : 2 , name : "Bool", parameters : "value" , comments : "//'value' can be any type."},
    {id : 3 , name : "isString", parameters : "value" , comments : "//'value' can be any type."},
    {id : 4 , name : "isNumber", parameters : "value" , comments : "//'value' can be any type."},
    {id : 5 , name : "isBool", parameters : "value" , comments : "//'value' can be any type."},
    {id : 6 , name : "isCollection", parameters : "value" , comments : "//'value' can be any type."},
    {id : 7 , name : "isInt", parameters : "value" , comments : "//'value' can be any type."},
    {id : 8 , name : "isFloat", parameters : "value" , comments : "//'value' can be any type."},
    {id : 9 , name : "isAlpha", parameters : "value" , comments : "//'value' can be any type."},
    {id : 10 , name : "isAlnum", parameters : "value" , comments : "//'value' can be any type."},
    {id : 11 , name : "isPalindrome", parameters : "value" , comments : "//'value' can be any type."},
    {id : 12 , name : "isAscii", parameters : "value" , comments : "//'value' can be any type."},
    {id : 13 , name : "length", parameters : "value" , comments : "//'value' can be any type."},
    {id : 14 , name : "lower", parameters : "value" , comments : "//'value' is String."},
    {id : 15 , name : "upper", parameters : "value" , comments : "//'value' is String."},
    {id : 19 , name : "reverse", parameters : "value" , comments : "//'value' can be any type."},
    {id : 20 , name : "isTitle" , parameters : "value" , comments : "//'value' is string."},
    {id : 21 , name : "isFunction", parameters : "value" , comments : "//'value' can be any type."},
    {id : 22 , name : "isSpace", parameters : "value" , comments : "//'value' is String."},
]

export const builtin_function2 = [
    
    {id : 19 , name : "slice", parameters : "value , start , stop" , comments : "//'value' can be any type."},
    {id : 0 , name : "lTrim", parameters : "value" , comments : "//'value' is String."},
    {id : 1 , name : "rTrim", parameters : "value" , comments : "//'value' is String."},
    {id : 2 , name : "trim", parameters : "value" , comments : "//'value' is String."},
    {id : 3 , name : "startsWith", parameters : "value , target" , comments : "//value can be any type."},
    {id : 4 , name : "endsWith", parameters : "value , target" , comments : "//value can be any type."},
    {id : 5 , name : "toCap", parameters : "value" , comments : "//'value' is String."},
    {id : 6 , name : "find", parameters : "value , target" , comments : "//value can be any type."},
    {id : 7 , name : "swapCase", parameters : "value" , comments : "//'value' is String."},
    {id : 8 , name : "charAt", parameters : "value , index" , comments : "//value can be any type."},
    /*{id : 9 , name : "power", parameters : "value" , comments : "//'value' can be a Number or String."},
    {id : 10 , name : "abs", parameters : "value" , comments : "//'value' can be a Number or String."},
    {id : 11 , name : "sqrt", parameters : "value" , comments : "//'value' can be a Number or String."},
    {id : 12 , name : "log10", parameters : "value" , comments : "//'value' can be a Number or String."},
    {id : 13 , name : "sin", parameters : "value" , comments : "//'value' can be a Number or String."},
    {id : 14 , name : "cos", parameters : "value" , comments : "//'value' can be a Number or String."},
    {id : 15 , name : "tan", parameters : "value" , comments : "//'value' can be a Number or String."},
    {id : 16 , name : "cot", parameters : "value" , comments : "//'value' can be a Number or String."},
    {id : 17 , name : "sec", parameters : "value" , comments : "//'value' can be a Number or String."},
    {id : 18 , name : "cosec", parameters : "value" , comments : "//'value' can be a Number or String."},*/
  ];